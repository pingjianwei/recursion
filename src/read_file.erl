%%%-------------------------------------------------------------------
%%% @author pingjianwei
%%% @copyright (C) 2017, <COMPANY>
%%% @doc
%%%
%%% @end
%%% Created : 21. 五月 2017 20:28
%%%-------------------------------------------------------------------
-module(read_file).
-author("pingjianwei").

%% API
-export([read_file/0]).
-define(DD,<<226,148,156,226,148,128,226,148,128,226,148,128,226,148,128,226,148,128,226,
  148,128,226,148,128,226,148,128,226,148,128,226,148,128,226,148,188,226,148,
  128,226,148,128,226,148,128,226,148,128,226,148,128,226,148,128,226,148,128,
  226,148,188,226,148,128,226,148,128,226,148,128,226,148,128,226,148,128,226,
  148,128,226,148,128,226,148,188,226,148,128,226,148,128,226,148,128,226,148,
  128,226,148,128,226,148,128,226,148,128,226,148,128,226,148,188,226,148,128,
  226,148,128,226,148,128,226,148,128,226,148,128,226,148,128,226,148,128,226,
  148,128,226,148,128,226,148,188,226,148,128,226,148,128,226,148,128,226,148,
  128,226,148,128,226,148,128,226,148,128,226,148,128,226,148,128,226,148,128,
  226,148,128,226,148,128,226,148,188,226,148,128,226,148,128,226,148,128,226,
  148,128,226,148,128,226,148,128,226,148,128,226,148,128,226,148,188,226,148,
  128,226,148,128,226,148,128,226,148,128,226,148,128,226,148,128,226,148,128,
  226,148,188,226,148,128,226,148,128,226,148,128,226,148,128,226,148,128,226,
  148,128,226,148,188,226,148,128,226,148,128,226,148,128,226,148,128,226,148,
  128,226,148,128,226,148,128,226,148,188,226,148,128,226,148,128,226,148,128,
  226,148,128,226,148,128,226,148,128,226,148,128,226,148,188,226,148,128,226,
  148,128,226,148,128,226,148,128,226,148,128,226,148,128,226,148,128,226,148,
  128,226,148,128,226,148,128,226,148,128,226,148,128,226,148,128,226,148,128,
  226,148,188,226,148,128,226,148,128,226,148,128,226,148,128,226,148,128,226,
  148,128,226,148,128,226,148,128,226,148,188,226,148,128,226,148,128,226,148,
  128,226,148,128,226,148,128,226,148,128,226,148,128,226,148,128,226,148,128,
  226,148,128,226,148,128,226,148,188,226,148,128,226,148,128,226,148,128,226,
  148,128,226,148,128,226,148,128,226,148,128,226,148,188,226,148,128,226,148,
  128,226,148,128,226,148,128,226,148,128,226,148,128,226,148,128,226,148,128,
  226,148,128,226,148,128,226,148,128,226,148,188,226,148,128,226,148,128,226,
  148,128,226,148,128,226,148,128,226,148,128,226,148,128,226,148,128,226,148,
  128,226,148,128,226,148,128,226,148,164>>).
read_file() ->
  {ok,Bin1}=file:read_file("road.txt"),
  {ok,Bin2}=file:read_file("finance.20170520.txt.wap"),

  io:format("~p~n", [Bin1]),
  %io:format("~p~n", [Bin2]),
  BinList = binary:split(Bin2, [<< $\n>>], [global, trim_all]),
  TotalLines = length(BinList),
  io:format("~p~n",[TotalLines]),
  TopSkipLines = 6,
  BottomSkipLines = 2,
  BinListDetail = lists:sublist(BinList, TopSkipLines + 1, TotalLines - TopSkipLines - BottomSkipLines),
  %file:write_file("test.txt",lists:filter(fun(X) -> X=/=?DD end,BinListDetail)),
  List=lists:filter(fun(X) -> X=/=?DD end,BinListDetail),
  write(List),

  io:format("~p~n", [BinListDetail]).
write([]) -> [];
write([H|T]) ->
  file:write_file("test.txt",H,[append]),
  file:write_file("test.txt",<<"$\n">>,[append]),
  write(T).
